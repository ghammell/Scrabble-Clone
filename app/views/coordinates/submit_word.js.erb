<%= render 'update_droppable' %>

var player = <%= @player %>
var nextPlayer = function() {
  if (player === 1) {
    return 2
  } else {
    return 1
  }
}()

var hand = '#p' + player + '_hand'
var nextPlayerHand = '#p' + nextPlayer + '_hand'

var add_letters = {
  letters: <%= @letters %>,
  add: function() {
    for (i=0; i < this.letters.length; i++){
      $(hand).children('ul').append(
        "<li><div class='letter'>" + alphabet[this.letters[i]] + "</div></li>"
      )
    }
  }
}

var add_results = {
  results: JSON.parse("<%= escape_javascript (@results.to_json.html_safe) %>"),
  totalPoints: function() {
    var points = 0
    for(i=0; i < this.results.length; i++) {
      points += this.results[i][1]
    }
    return points
  },
  addTotal: function() {
    currentScore = parseInt($(hand).children('.score').text())
    $(hand).children('.score').text(currentScore + this.totalPoints())
  },
  addWords: function() {
    for(i=0; i < this.results.length; i++) {
      $(hand + ' .successful_words').slideDown()
      $(hand + ' .successful_words .words').prepend("<span>" + this.results[i][0] + ": " + this.results[i][1] + "pts</span><br>")
    }
  }
}

add_results.addTotal()
add_results.addWords()
add_letters.add()

$(hand + ' .word_buttons').slideUp()
$(nextPlayerHand + ' .word_buttons').slideDown()

if (add_results.totalPoints() >= 0) {
  $(hand + ' .letter').removeClass('draggable ui-draggable ui-draggable-handle')
  $(nextPlayerHand + ' .letter').addClass('draggable')
}

BindDraggable('.draggable')
dropResetter.reset()